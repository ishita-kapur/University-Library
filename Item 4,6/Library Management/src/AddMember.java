/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ishita kapur
 */

import java.sql.*;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

public class AddMember extends javax.swing.JFrame {

    /**
     * Creates new form AddMember
     */
    public AddMember() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupIsFaculty = new javax.swing.ButtonGroup();
        panelAddMember = new javax.swing.JPanel();
        labelSSN = new javax.swing.JLabel();
        labelIsFaculty = new javax.swing.JLabel();
        labelAddress = new javax.swing.JLabel();
        comboAddressType1 = new javax.swing.JComboBox<>();
        textAddress1 = new javax.swing.JTextField();
        comboAddressType2 = new javax.swing.JComboBox<>();
        textAddress2 = new javax.swing.JTextField();
        textSSN = new javax.swing.JTextField();
        labelPhone = new javax.swing.JLabel();
        comboPhoneNoType = new javax.swing.JComboBox<>();
        textPhoneNo1 = new javax.swing.JTextField();
        labelStaffID = new javax.swing.JLabel();
        textStaffID = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        comboPhoneNoType2 = new javax.swing.JComboBox<>();
        textPhoneNo2 = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        labelEmailID = new javax.swing.JLabel();
        textEmailID = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Member");

        labelSSN.setText("SSN");

        labelIsFaculty.setText("Faculty");

        labelAddress.setText("Address");

        comboAddressType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Campus", "Mailing" }));

        textAddress1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAddress1ActionPerformed(evt);
            }
        });

        comboAddressType2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Campus", "Mailing" }));

        textAddress2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAddress2ActionPerformed(evt);
            }
        });

        textSSN.setToolTipText("Enter person's SSN");
        textSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSSNActionPerformed(evt);
            }
        });

        labelPhone.setText("Phone No");

        comboPhoneNoType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Home", "Mobile" }));
        comboPhoneNoType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPhoneNoTypeActionPerformed(evt);
            }
        });

        labelStaffID.setText("Staff ID");

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        comboPhoneNoType2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mobile", "Home" }));
        comboPhoneNoType2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPhoneNoType2ActionPerformed(evt);
            }
        });

        labelName.setText("Name");

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        labelEmailID.setText("Email ID");

        jCheckBox1.setText("Yes");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddMemberLayout = new javax.swing.GroupLayout(panelAddMember);
        panelAddMember.setLayout(panelAddMemberLayout);
        panelAddMemberLayout.setHorizontalGroup(
            panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddMemberLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddMemberLayout.createSequentialGroup()
                        .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAddress)
                            .addComponent(labelSSN)
                            .addComponent(labelIsFaculty)
                            .addComponent(labelPhone)
                            .addComponent(labelStaffID)
                            .addComponent(labelName)
                            .addComponent(labelEmailID))
                        .addGap(51, 51, 51)
                        .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboAddressType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboAddressType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textAddress2)
                                .addComponent(textAddress1)
                                .addComponent(textSSN)
                                .addComponent(textStaffID)
                                .addGroup(panelAddMemberLayout.createSequentialGroup()
                                    .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(comboPhoneNoType2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(comboPhoneNoType, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textPhoneNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textPhoneNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(textName)
                                .addComponent(textEmailID))
                            .addComponent(jCheckBox1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelAddMemberLayout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelAddMemberLayout.setVerticalGroup(
            panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddMemberLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSSN)
                    .addComponent(textSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelName))
                .addGap(18, 18, 18)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmailID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIsFaculty)
                    .addComponent(jCheckBox1))
                .addGap(18, 18, 18)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAddressType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboAddressType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPhoneNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPhoneNoType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPhone))
                .addGap(18, 18, 18)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPhoneNoType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPhoneNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStaffID)
                    .addComponent(textStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(panelAddMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear)
                    .addComponent(btnBack))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAddMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAddMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textAddress1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAddress1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAddress1ActionPerformed

    private void textAddress2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAddress2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAddress2ActionPerformed

    private void textSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSSNActionPerformed

    private void comboPhoneNoTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPhoneNoTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPhoneNoTypeActionPerformed

    private void comboPhoneNoType2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPhoneNoType2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPhoneNoType2ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "password");
            
            String sql = "insert into member values (?, ?, ?, ?, ?, ?, ?)";
            String query_2 = "insert into address values (?, ?, ?)";
            String query_3 = "insert into phone_no values (?, ?, ?)";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            PreparedStatement pstmt_2 = conn.prepareStatement(query_2);
            PreparedStatement pstmt_3 = conn.prepareStatement(query_2);
            PreparedStatement pstmt_4 = conn.prepareStatement(query_3);
            
            if(textSSN.getText().trim().isEmpty() || textName.getText().trim().isEmpty() || textAddress1.getText().trim().isEmpty() || textAddress2.getText().trim().isEmpty() || textPhoneNo1.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Empty fields are not accepted.");
                return;
            }
            String ssn = textSSN.getText();
            Statement stmt_1 = conn.createStatement();
            ResultSet rs = stmt_1.executeQuery("SELECT Name FROM MEMBER WHERE SSN = "+ssn);
            while(rs.next()){
                String name = rs.getString("Name");
                JOptionPane.showMessageDialog(null, name + " is already a member.");
                textSSN.setText("");
                textName.setText("");
                textEmailID.setText("");
                jCheckBox1.setSelected(false);
                comboAddressType1.setSelectedIndex(0);
                textAddress1.setText("");
                comboAddressType2.setSelectedIndex(0);
                textAddress2.setText("");
                textStaffID.setText("");
                comboPhoneNoType.setSelectedIndex(0);
                textPhoneNo1.setText("");
                comboPhoneNoType2.setSelectedIndex(0);
                textPhoneNo2.setText("");
                return;
            }
            pstmt.setString(1, textSSN.getText());
            pstmt_2.setString(1, textSSN.getText());
            pstmt_3.setString(1, textSSN.getText());
            
            pstmt.setString(2, textName.getText());
            
            pstmt.setString(3, textEmailID.getText());
            
            String is_Faculty;
            if(jCheckBox1.isSelected()){
                is_Faculty = jCheckBox1.getText();
            }
            else{
                is_Faculty = "No";
            }
            
            pstmt.setString(4, is_Faculty);
            
            String member_ssn, member_name, mem_id;
            member_ssn = textSSN.getText();
            member_name = textName.getText();
            mem_id = member_name.substring(0, 2) + member_ssn;            
            pstmt.setString(5, mem_id);
            
            LocalDate today = LocalDate.now();
            int year = today.getYear();
            int month = today.getMonthValue();
            int day = today.getDayOfMonth();
            String validity;
            int validity_year = year + 4;
            validity = Integer.toString(validity_year) + '-' + Integer.toString(month) + '-' + Integer.toString(day);
            pstmt.setString(6, validity);
            
            if(textStaffID.getText().isEmpty())
                pstmt.setNull(7, Types.INTEGER);
            else
                pstmt.setInt(7, Integer.parseInt(textStaffID.getText()));
            
            String address;
            address = textAddress1.getText();
            pstmt_2.setString(2, address);
            pstmt_3.setString(2, textAddress2.getText());
            
            String address_type;
            address_type = comboAddressType1.getSelectedItem().toString();
            pstmt_2.setString(3, address_type);
            pstmt_3.setString(3, comboAddressType2.getSelectedItem().toString());
            
            if(comboAddressType1.getSelectedItem().toString().equals(comboAddressType2.getSelectedItem().toString())){
                JOptionPane.showMessageDialog(null, "Both addresses cannot be of the same type.");
                return;
            }

            Map<String, String> phone_map = new HashMap<>();
            phone_map.put(comboPhoneNoType.getSelectedItem().toString(), textPhoneNo1.getText());
            phone_map.put(comboPhoneNoType2.getSelectedItem().toString(), textPhoneNo2.getText());
            if(comboPhoneNoType.getSelectedItem().toString().equals(comboPhoneNoType2.getSelectedItem().toString())){
                JOptionPane.showMessageDialog(null, "Both phone numbers cannot be of the same type.");
                return;
            }
            if(textPhoneNo2.getText().trim().isEmpty()){
                phone_map.put(comboPhoneNoType2.getSelectedItem().toString(), "NULL");
            }
            
            pstmt.executeUpdate();          
            pstmt_2.executeUpdate();
            pstmt_3.executeUpdate();
            for(Object key : phone_map.keySet()){
                Object value = phone_map.get(key);
                pstmt_4.setString(1, textSSN.getText());
                pstmt_4.setString(2, value.toString());
                pstmt_4.setString(3, key.toString());
                pstmt_4.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, member_name+" enrolled as a member.");
            UniversityLibrary u_lib = new UniversityLibrary();
            u_lib.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void textNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        textSSN.setText("");
        textName.setText("");
        textEmailID.setText("");
        jCheckBox1.setSelected(false);
        comboAddressType1.setSelectedIndex(0);
        textAddress1.setText("");
        comboAddressType2.setSelectedIndex(0);
        textAddress2.setText("");
        textStaffID.setText("");
        comboPhoneNoType.setSelectedIndex(0);
        textPhoneNo1.setText("");
        comboPhoneNoType2.setSelectedIndex(0);
        textPhoneNo2.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        UniversityLibrary u_lib = new UniversityLibrary();
        u_lib.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.ButtonGroup btnGroupIsFaculty;
    private javax.swing.JComboBox<String> comboAddressType1;
    private javax.swing.JComboBox<String> comboAddressType2;
    private javax.swing.JComboBox<String> comboPhoneNoType;
    private javax.swing.JComboBox<String> comboPhoneNoType2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelEmailID;
    private javax.swing.JLabel labelIsFaculty;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPhone;
    private javax.swing.JLabel labelSSN;
    private javax.swing.JLabel labelStaffID;
    private javax.swing.JPanel panelAddMember;
    private javax.swing.JTextField textAddress1;
    private javax.swing.JTextField textAddress2;
    private javax.swing.JTextField textEmailID;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPhoneNo1;
    private javax.swing.JTextField textPhoneNo2;
    private javax.swing.JTextField textSSN;
    private javax.swing.JTextField textStaffID;
    // End of variables declaration//GEN-END:variables
}
